<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
    这里配置所有用到的sql语句
    namespace:这个Mapper文件的唯一标示，可自定义，但是不能重复
 -->
<mapper namespace="com.cxn.dao.UserMapper">
    <!--
        id:唯一标示，不可重复，
        type：这个映射所标示的Java对象类型，可以用别名
        利用resultMap也是解决字段名与列名不一致问题的一种方案
        autoMapping自动映射字段名，默认为true，所以非必要将所有的映射关系列出-->
    <resultMap id="userResultMap" type="com.cxn.model.User">
        <!-- 配置主键信息， -->
        <id property="id" column="id"/>
        <result column="name" property="name"/>
    </resultMap>

    <!-- sql片段-->
    <sql id="userColumns">
        id, age, name, address
    </sql>
    <select id="getByName" parameterType="java.lang.String" resultMap="userResultMap">
        <!-- #{id}作为预编译的站位符，映射要传入的参数 -->
        SELECT <include refid="userColumns"/>
        FROM  tbl_user
        WHERE 1=1
        <if test="name != null and name.trim() != '' ">
            AND NAME LIKE "%${name}%"
        </if>
    </select>
    <!--
        each sql is a statement
        select 代表查询，相应的还有update，insert，delete
        id:这个statement的唯一标示
        parameterType:输入参数类型，写类的全路径
        resultType:查询结果类型，写全路径
     -->
    <select id="getById" parameterType="java.lang.Integer" resultType="com.cxn.model.User">
        <!-- #{id}作为预编译的站位符，映射要传入的参数 -->
        SELECT * FROM  tbl_user WHERE  id = #{id}
    </select>

    <!-- 查询全部 -->
    <select id="queryAll" resultType="com.cxn.model.User">
        SELECT * FROM  tbl_user
    </select>

    <!-- useGeneratedKeys可以实现id回显-->
    <insert id="insertUser" parameterType="com.cxn.model.User" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO tbl_user(
        id,
        name,
        age,
        address
        )
        VALUES
        (
        NULL ,
        #{name},
        #{age},
        #{address}
        )
    </insert>

    <update id="updateUser" parameterType="com.cxn.model.User">
        UPDATE  tbl_user
        <!-- set标签会自动校验语法错误，多余的','会被去除 -->
        <set>
          <if test="name !=null and name.trim() != ''">
              name = #{name},
          </if>
          <if test="address !=null and address.trim() != ''">
              address = #{address},
          </if>
          <if test="age !=null">
              age = #{age},
          </if>
        </set>
        WHERE
            id = #{id}
    </update>


    <delete id="removeUser" parameterType="java.lang.Integer">
        DELETE  FROM  tbl_user WHERE  id = #{id}
    </delete>

    <select id="queryAllUserBySort" parameterType="java.lang.Integer" resultType="com.cxn.model.User">
        SELECT <include refid="userColumns"/>
        FROM tbl_user
        <choose>
            <when test="orderType == 0">
                ORDER BY age ASC
            </when>
            <when test="orderType == 1">
                ORDER  BY age DESC
            </when>
            <otherwise>
                ORDER BY id ASC
            </otherwise>
        </choose>
    </select>

    <select id="queryUserByNameAndAge" resultType="com.cxn.model.User">
        SELECT * FROM tbl_user
        <!-- where的作用就是检测sql语句，排除多余的and，避免sql错误 -->
        <where>
            <if test="name != null and name.trim() != ''">
                AND name LIKE '%${name}%'
            </if>
            <if test="age != null">
                AND  age &lt; #{age}
            </if>
        </where>

    </select>

    <select id="queryUserByIds" resultMap="userResultMap" >
        SELECT <include refid="userColumns"/>
        FROM  tbl_user
        WHERE id IN
        <!-- collection:集合的名称，如果使用了Param注解，这里就是注解中的值
            item：遍历取到的元素
            -->
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>
</mapper>